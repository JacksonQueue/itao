<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
				http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd
				http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
				http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd"
	default-autowire="byName">
		
	<!-- <mvc:default-servlet-handler default-servlet-name="所使用的Web服务器默认使用的Servlet名称" />
                会在Spring MVC上下文中定义一个org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler，
                它会像一个检查员，对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，就将该请求转由Web应用服务器默认的Servlet处理，
                如果不是静态资源的请求，才由DispatcherServlet继续处理。
                 一般Web应用服务器默认的Servlet名称是"default"，因此DefaultServletHttpRequestHandler可以找到它。如果你所有的Web应用服务器的默认Servlet名称不是"default"，则需要通过default-servlet-name属性显示指定：
     -->
    <!-- <mvc:default-servlet-handler/> -->
    
    <!-- 启动注解，注册服务，如验证框架、全局类型转换器-->
    <mvc:annotation-driven/> 	
	
	<!-- Bean扫描目录 -->
	<context:component-scan base-package="com.leafnet"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 用户登录校验 -->
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/auth/**" />
			<ref bean="userCheckInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 视图解析器
	              当处理器返回“index”时，InternalResourceViewResolver解析器会自动添加前缀和后缀：/WEB-INF/view/index.jsp         
	 -->
	<bean id="defaultViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="1" />
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="contentType" value="text/html" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="redirectHttp10Compatible" value="false" />
	</bean>
	
	<!-- 文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxUploadSize" value="#{10 * 1024 * 1024}" />
	</bean>
	
	<!-- 验证码配置 -->
	<util:properties id="kaptchaConf"
		location="classpath:/conf/kaptcha.properties" />
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
	    <property name="config">
	       <bean class="com.google.code.kaptcha.util.Config">
	          <constructor-arg ref="kaptchaConf" />
	       </bean>
	    </property>
	</bean>

</beans>
